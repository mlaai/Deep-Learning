Write an algorithm for Dog Classification

1. Upload an image on the app
2. If a dog is detected - predict the dog's breed.
3. If a human is detected - predict the dog breed thats most resembling

Software
1. Create an app

Hardware
1. GPU ?

Deeplearning 
1. Algorithm
2. Detect a dog in an image
3. Detect a human in a image
4. CNN to classify Dog breeds
5. CNN to classify Dog breeds using Transfer Learning

Testing and Validation
1. Test Algorithm
2. Test accuracy of identifying a dog in an image
3. Test accuracy of identifying a human in an image
4. Test and validate CNN to classify dog breed
5. Test and validate CNN to classify dog breed - Transfer Learning

Detect human
1. Extract pre-trained face detector
2. Load image
3. Convert image to gray scale
4. find faces in image
5. Foreach face in image draw a box
6. Convert the image back to RGB from gray scale
7. Display the image with bounding box

To detect if an image contains human face
Function : FaceDetector
Input : Image location
Output : Number of faces
Pretrained Face Detector - CascadeClassifier , Open CV, import cv2

import cv2                
import matplotlib.pyplot as plt                        
%matplotlib inline

def face_detector(img_path, face_cascade):
    img = cv2.imread(img_path)
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray)
    return len(faces) > 0

print(face_detector(file,cv2.CascadeClassifier('haarcascades/haarcascade_frontalface_alt.xml')))


Detect Dogs
1. Input Image
2. Crop Image size to standard size
3. Convert image to tensor
4. Capture result of prediction using VGG16 pretrained model that accepts an image tensor
5. Predict class index

